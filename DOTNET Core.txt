DOT NET CORE


ASP.NET Core is an open source and cloud-optimized web framework for developing modern web applications that can be developed and run on Windows, Linux and the Mac. It includes the MVC framework, which now combines the features of MVC and Web API into a single web programming framework.

ASP.NET Core apps can run on .NET Core or on the full .NET Framework.

It was architected to provide an optimized development framework for apps that are deployed to the cloud or run on-premises.

It consists of modular components with minimal overhead, so you retain flexibility while constructing your solutions.

You can develop and run your ASP.NET Core apps cross-platform on Windows, Mac and Linux.


Advantages of ASP.NET Core
------------------------------------

ASP.NET Core comes with the following advantages −

ASP.NET Core has a number of architectural changes that result in a much leaner and modular framework.

ASP.NET Core is no longer based on System.Web.dll. It is based on a set of granular and well factored NuGet packages.

This allows you to optimize your app to include just the NuGet packages you need.

The benefits of a smaller app surface area include tighter security, reduced servicing, improved performance, and decreased costs

With ASP.NET Core, you can get the following improvements −

Build and run cross-platform ASP.NET apps on Windows, Mac and Linux.

Built on .NET Core, which supports true side-by-side app versioning.

New tooling that simplifies modern Web development.

Single aligned web stack for Web UI and Web APIs.

Cloud-ready environment-based configuration.

Built-in support for dependency injection.

Tag Helpers which makes Razor markup more natural with HTML.

Ability to host on IIS or self-host in your own process.





MIDDLE WARE

Middleware are software components that are assembled into an application pipeline to handle requests and responses.

Each component chooses whether to pass the request on to the next component in the pipeline, and can perform certain actions before and after the next component is invoked in the pipeline.

Request delegates are used to build the request pipeline. The request delegates handle each HTTP request.

Each piece of middleware in ASP.NET Core is an object, and each piece has a very specific, focused, and limited role.

Ultimately, we need many pieces of middleware for an application to behave appropriately.